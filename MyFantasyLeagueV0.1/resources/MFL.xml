<?xml version="1.0" encoding="UTF-8"?>
<!-- <!DOCTYPE beans PUBLIC "-//SPRING/DTD BEAN 2.8//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/oxm
	http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd">
    
<context:property-placeholder location="classpath:mfl.properties"/>

<!-- <bean id="playerunmarshaller" class="javax.xml.bind.JAXBContext">
	<property name ="classesToBeBound" value = "com.mfl.modules.player.models.Players"/>
</bean> -->
    
<bean id="requesthandlers" class="com.mfl.RequestHandlers">
	<property name="playerModule">
		<bean class="com.mfl.modules.player.PlayerModule">
			<property name="pxs" ref="playerxmlservices"/>
			<property name="pds">
				<bean class="com.mfl.modules.player.PlayerDBServices">
					<property name = "players" ref="innerplayers"/>
				</bean>
			</property>
		</bean>
	</property>
	<property name="teamModule">
		<bean class="com.mfl.modules.team.TeamModule">
			<property name="txs" ref="teamxmlservices"/>
			<property name="tds">
				<bean class="com.mfl.modules.team.TeamDBServices">
					<property name = "teams" ref="innerteams"/>
				</bean>
			</property>
		</bean>
	</property>
	<!-- <property name="teamModule" ref="teammodule"/> -->
	<property name="gda" ref="playerdataacquirer"/>
	<property name="tgda" ref="teamdataacquirer"/>
	<!-- <property name="tgda" ref="teamdataacquirer"/> -->
</bean>

<bean id = "playerxmlservices" class="com.mfl.modules.player.PlayerXMLServices">
	<!-- <property name = "players" ref = "innerplayers"/>	 -->			
</bean>
<bean id = "teamxmlservices" class="com.mfl.modules.team.TeamXMLServices">
	<!-- <property name = "players" ref = "innerplayers"/>	 -->			
</bean>
<bean id = "innerplayers" class="com.mfl.models.Player.Players">
			<!-- <constructor-arg ref ="playerxmlservices"/> -->
</bean>
<bean id = "innerteams" class="com.mfl.models.Team.Teams">
			<!-- <constructor-arg ref ="playerxmlservices"/> -->
</bean>
<!-- <bean id = "innerteamcomp" class="com.mfl.models.Team.TeamComp">
			<constructor-arg ref ="playerxmlservices"/>
</bean> -->

<!-- <bean id = "players" class="com.MFL.Domains.Player" scope="prototype"/> -->


<!-- <bean id="teammodule" class="com.MFL.Domains.Modules.TeamModule">
</bean> -->
<bean id="playerdataacquirer" class="com.mfl.GenericDataAcquirer">
	<property name = "xmlresourcepath" value="${mfl.playerresourcepath}"/>
</bean>
<bean id="teamdataacquirer" class="com.mfl.GenericDataAcquirer">
	<property name = "xmlresourcepath" value="${mfl.teamresourcepath}"/>
</bean>

<!-- <bean id="teamdataacquirer" class="com.MFL.Services.GenericDataAcquirer">
	<property name = "xmlresourcepath" value="${mfl.teamresourcepath}"/>
</bean> -->

<!-- <bean id = "players" class="com.MFL.Domains.Players"/>
<bean id = "teams" class="com.MFL.Domains.Teams"/>
<bean id = "teamcomp" class="com.MFL.Domains.TeamComp"/>

<bean id = "playerdao" class="com.MFL.Domains.DAO.PlayerDAO"/>
 -->

</beans>